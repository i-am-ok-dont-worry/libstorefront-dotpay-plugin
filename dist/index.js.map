{"version":3,"sources":["webpack://LSFPlugin/webpack/universalModuleDefinition","webpack://LSFPlugin/webpack/bootstrap","webpack://LSFPlugin/./index.ts","webpack://LSFPlugin/./src/dao/index.ts","webpack://LSFPlugin/./src/index.ts","webpack://LSFPlugin/./src/service/index.ts","webpack://LSFPlugin/./src/store/dotpay.actions.ts","webpack://LSFPlugin/./src/store/dotpay.default.ts","webpack://LSFPlugin/./src/store/dotpay.reducer.ts","webpack://LSFPlugin/./src/store/dotpay.thunks.ts","webpack://LSFPlugin/./src/utils/index.ts","webpack://LSFPlugin/external \"@grupakmk/libstorefront\"","webpack://LSFPlugin/external \"inversify\"","webpack://LSFPlugin/external \"querystring\""],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"LSFPlugin\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LSFPlugin\"] = factory();\n\telse\n\t\troot[\"LSFPlugin\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.ts\");\n","export { DotpayPaymentPlugin } from './src/index';\nexport { DotpayService } from './src/service/index';\nexport { DotpayDao } from './src/dao/index';\nexport { DotpayResponse, DotpayForm } from './src/types/index';\n","import { inject, injectable } from 'inversify';\nimport { Task, TaskQueue, URLTransform } from '@grupakmk/libstorefront';\nimport { DotpayForm } from \"../types\";\nimport { buildDotpayPostBody } from \"../utils\";\n\n@injectable()\nexport class DotpayDao {\n    public getDotpayForm (orderId: string): Promise<Task> {\n        return this.taskQueue.execute({\n            url: URLTransform.getAbsoluteApiUrl('/api/vendor/dotpay/form/' + orderId),\n            payload: {\n                method: 'GET',\n                headers: { 'Content-Type': 'application/json' },\n                mode: 'cors'\n            },\n            silent: true\n        });\n    }\n\n    public getDotpayPaymentStatus (orderId: string): Promise<Task> {\n        return this.taskQueue.execute({\n            url: URLTransform.getAbsoluteApiUrl('/api/vendor/dotpay/status/' + orderId),\n            payload: {\n                method: 'GET',\n                headers: { 'Content-Type': 'application/json' },\n                mode: 'cors'\n            },\n            silent: true\n        });\n    }\n\n    public sendDotpayInformationForm (sslUrl: string, form: DotpayForm): Promise<Task> {\n        console.warn('Sending dotpay form at: ', sslUrl, buildDotpayPostBody(form));\n        return this.taskQueue.execute({\n            url: sslUrl,\n            payload: {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                mode: 'cors',\n                body: buildDotpayPostBody(form)\n            },\n            silent: true\n        });\n    }\n\n    public constructor(@inject(TaskQueue) private taskQueue: TaskQueue) {}\n}\n","import { createLibstorefrontModule, HookType, LibStorefront } from '@grupakmk/libstorefront';\nimport { DotpayService } from './service';\nimport { DotpayDao } from './dao';\nimport { dotpayReducer } from './store/dotpay.reducer';\nimport { DotpayDefaultState } from './store/dotpay.default';\n\n/**\n * Libstorefront plugin template\n */\nexport const DotpayPaymentPlugin = (libstorefront: LibStorefront) => {\n    libstorefront.getIOCContainer().bind<DotpayService>(DotpayService).to(DotpayService);\n    libstorefront.getIOCContainer().bind<DotpayDao>(DotpayDao).to(DotpayDao);\n    libstorefront.listenTo(HookType.AfterCoreModulesRegistered, (lsf: LibStorefront) => {\n        lsf.registerModule(createLibstorefrontModule('dotpay', dotpayReducer, DotpayDefaultState));\n    });\n};\n","import { inject, injectable } from 'inversify';\nimport { DotpayThunks } from '../store/dotpay.thunks';\nimport { AbstractStore, LibstorefrontInnerState, Task } from '@grupakmk/libstorefront';\nimport { DotpayResponse } from '../types';\n\n@injectable()\nexport class DotpayService {\n\n    @inject(AbstractStore) private store: AbstractStore<LibstorefrontInnerState>;\n\n    /**\n     * Returns dotpay form that should be injected as HTML form\n     * into a checkout payment pending page\n     * @param {number} orderId\n     * @returns {Promise<any>} Dotpay embeddable form\n     */\n    public getDotpayPaymentForm (orderId: string): Promise<DotpayResponse> {\n        return this.store.dispatch(DotpayThunks.getDotpayForm(orderId));\n    }\n\n    /**\n     * Returns dotpay payment status for selected order\n     * @param {number }orderId\n     * @returns {Promise<any>} Payment status\n     */\n    public getDotpayPaymentStatus (orderId: string): Promise<any> {\n        return this.store.dispatch(DotpayThunks.getDotpayStatus(orderId));\n    }\n\n    /**\n     * Sends parsed dotpay form\n     */\n    public sendDotpayForm (): Promise<Task> {\n        return this.store.dispatch(DotpayThunks.sendDotpayForm());\n    }\n}\n","import { DotpayForm } from '../types';\n\nexport namespace DotpayActions {\n    export const SN_DOTPAY = 'dotpay';\n    export const SET_DOTPAY_FORM = SN_DOTPAY + '/SET_FORM';\n    export const setDotpayForm = (form: DotpayForm) => ({\n        type: SET_DOTPAY_FORM,\n        payload: form\n    });\n\n    export const SET_DOTPAY_URL = SN_DOTPAY + '/SET_URL';\n    export const setDotpayUrl = (url: string) => ({\n        type: SET_DOTPAY_URL,\n        payload: url\n    });\n\n    export const SET_DOTPAY_STATUS = SN_DOTPAY + '/SET_STATUS';\n    export const setDotpayStatus = (status: any) => ({\n        type: SET_DOTPAY_STATUS,\n        payload: status\n    });\n}\n","import { DotpayForm } from \"../types\";\n\nexport const DotpayDefaultState: DotpayModuleState = {\n    form: null,\n    url: null,\n    status: null\n}\n\nexport interface DotpayModuleState {\n    form: DotpayForm,\n    url: string,\n    status: any\n}\n","import { Reducer } from '@grupakmk/libstorefront/dist/src/state-management/types/reducer';\nimport { DotpayDefaultState, DotpayModuleState } from './dotpay.default';\nimport { AnyAction } from '@grupakmk/libstorefront/dist/src/state-management/types/action';\nimport { DotpayActions } from './dotpay.actions';\n\nexport const dotpayReducer: Reducer<DotpayModuleState, AnyAction> = (state = DotpayDefaultState, action) => {\n    switch (action.type) {\n        case DotpayActions.SET_DOTPAY_FORM: {\n            return { ...state, form: action.payload };\n        }\n        case DotpayActions.SET_DOTPAY_STATUS: {\n            return { ...state, status: action.payload };\n        }\n        case DotpayActions.SET_DOTPAY_URL: {\n            return { ...state, url: action.payload };\n        }\n        default: return state || DotpayDefaultState;\n    }\n};\n","import { DotpayDao } from '../dao';\nimport { DotpayActions } from './dotpay.actions';\nimport { AbstractStore, IOCContainer, LibstorefrontInnerState } from \"@grupakmk/libstorefront\";\nimport { StorageManager, StorageCollection } from '@grupakmk/libstorefront';\nimport { DotpayResponse } from \"../types\";\nimport { DotpayModuleState } from \"./dotpay.default\";\n\nexport namespace DotpayThunks {\n    // @ts-ignore\n    export const getDotpayForm = (orderId: string) => async (dispatch, getState) => {\n        try {\n            const response = await IOCContainer.get(DotpayDao).getDotpayForm(orderId);\n            let dotpay: DotpayResponse;\n            if (response.result instanceof Array) {\n                const [data] = response.result;\n                if (data && data.hasOwnProperty('url')) { dotpay = data; }\n            } else {\n                if (response.result && response.result.hasOwnProperty('url')) { dotpay = response.result; }\n            }\n\n            StorageManager.getInstance().get(StorageCollection.ORDERS).setItem('LAST_DOTPAY_PAYMENT', dotpay);\n            dispatch(DotpayActions.setDotpayForm(dotpay.data));\n            dispatch(DotpayActions.setDotpayUrl(dotpay.url));\n            return dotpay;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    // @ts-ignore\n    export const getDotpayStatus = (orderId: string) => async (dispatch, getState) => {\n        try {\n            const response = await IOCContainer.get(DotpayDao).getDotpayPaymentStatus(orderId);\n            await dispatch(DotpayActions.setDotpayStatus(response.result));\n            return response;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    export const sendDotpayForm = () => async (dispatch, getState) => {\n        try {\n            const orderNumber = (IOCContainer.get(AbstractStore).getState() as LibstorefrontInnerState).order.last_order_confirmation.confirmation.orderNumber;\n            const dotpay = IOCContainer.get(AbstractStore).getState().dotpay as DotpayModuleState;\n            const { form, url } = dotpay;\n            const response = await IOCContainer.get(DotpayDao).sendDotpayInformationForm(url, form);\n            const interval = setInterval(async () => {\n                const status = await dispatch(getDotpayStatus(orderNumber));\n                if (status) { clearInterval(interval); }\n            }, 5000);\n        } catch (e) {\n\n        }\n    }\n}\n","import { DotpayForm } from \"../types\";\nconst qs = require('querystring');\n\nexport const buildDotpayPostBody = (formData: DotpayForm) => {\n    if (formData && Object.keys(formData).length > 0) {\n        return qs.stringify(formData);\n    }\n\n    return null;\n};\n\n","module.exports = require(\"@grupakmk/libstorefront\");","module.exports = require(\"inversify\");","module.exports = require(\"querystring\");"],"sourceRoot":""}